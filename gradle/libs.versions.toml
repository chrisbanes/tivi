[versions]
agp = "8.0.2"
androidxlifecycle = "2.6.1"
androidxactivity = "1.7.2"
chucker = "3.5.2"
circuit = "0.9.1"
coil = "2.4.0"
compose-bom = "2023.03.00"
composecompiler = "1.4.7"
coroutines = "1.7.1"
debugdrawer = "0.9.8"
kotlin = "1.8.21"
kotlininject = "0.6.1"
ktlint = "0.49.1"
moko-resources = "0.23.0"
okhttp = "4.11.0"
kermit = "1.2.2" # Pinned back as Store uses Kermit 1.x
ktor = "2.3.1"
paging-multiplatform = "3.2.0-alpha05-0.2.2"
retrofit = "2.9.0"
spotless = "6.19.0"
sqldelight = "2.0.0-rc01"

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
android-lint = { id = "com.android.lint", version.ref = "agp" }
android-test = { id = "com.android.test", version.ref = "agp" }
cacheFixPlugin = { id = "org.gradle.android.cache-fix", version = "2.7.1" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
ksp = "com.google.devtools.ksp:1.8.21-1.0.11"
moko-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-resources" }
gms-googleServices = "com.google.gms.google-services:4.3.15"
firebase-crashlytics = "com.google.firebase.crashlytics:2.9.6"
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }

[libraries]
androidx-activity-activity = { module = "androidx.activity:activity", version.ref = "androidxactivity" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxactivity" }
androidx-archCoreTesting = "androidx.arch.core:core-testing:2.2.0"
androidx-browser = "androidx.browser:browser:1.5.0"
androidx-collection = "androidx.collection:collection:1.3.0-alpha04"
androidx-core = "androidx.core:core-ktx:1.10.1"
androidx-emoji = "androidx.emoji:emoji:1.1.0"

androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxlifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxlifecycle" }

paging-common = { module = "app.cash.paging:paging-common", version.ref = "paging-multiplatform" }
paging-compose = { module = "app.cash.paging:paging-compose-common", version.ref = "paging-multiplatform" }

androidx-palette = "androidx.palette:palette:1.0.0"

androidx-profileinstaller = "androidx.profileinstaller:profileinstaller:1.3.1"

androidx-test-core = "androidx.test:core-ktx:1.5.0"
androidx-test-junit = "androidx.test.ext:junit-ktx:1.1.5"
androidx-test-rules = "androidx.test:rules:1.5.0"
androidx-test-runner = "androidx.test:runner:1.5.2"
androidx-benchmark-macro = "androidx.benchmark:benchmark-macro-junit4:1.2.0-alpha15"
androidx-uiautomator = "androidx.test.uiautomator:uiautomator:2.2.0"

androidx-work-runtime = "androidx.work:work-runtime-ktx:2.8.1"

appauth = "net.openid:appauth:0.8.1"

chucker-library = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }

circuit-foundation = { module = "com.slack.circuit:circuit-foundation", version.ref = "circuit" }
circuit-overlay = { module = "com.slack.circuit:circuit-overlay", version.ref = "circuit" }
circuit-runtime = { module = "com.slack.circuit:circuit-runtime", version.ref = "circuit" }

coil-coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coil-gif = { module = "io.coil-kt:coil-gif", version.ref = "coil" }

tools-desugarjdklibs = "com.android.tools:desugar_jdk_libs:2.0.3"

compose-bom = { module = "dev.chrisbanes.compose:compose-bom", version.ref = "compose-bom" }
compose-animation-animation = { module = "androidx.compose.animation:animation" }
compose-foundation-foundation = { module = "androidx.compose.foundation:foundation" }
compose-foundation-layout = { module = "androidx.compose.foundation:foundation-layout" }
compose-material-iconsext = { module = "androidx.compose.material:material-icons-extended" }
compose-material-material = { module = "androidx.compose.material:material" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-ui-test = { module = "androidx.compose.ui:ui-test-junit4" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-ui = { module = "androidx.compose.ui:ui" }
compose-ui-uitextfonts = { module = "androidx.compose.ui:ui-text-google-fonts" }
compose-ui-util = { module = "androidx.compose.ui:ui-util" }
compose-ui-viewbinding = { module = "androidx.compose.ui:ui-viewbinding" }

# This isn't strictly used, but allows Renovate to see us using the Compose Compiler artifact
compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "composecompiler" }

google-firebase-analytics = "com.google.firebase:firebase-analytics-ktx:21.3.0"
google-firebase-crashlytics = "com.google.firebase:firebase-crashlytics-ktx:18.3.7"
google-firebase-perf = "com.google.firebase:firebase-perf-ktx:20.3.3"

debugdrawer-debugdrawer = { module = "au.com.gridstone.debugdrawer:debugdrawer", version.ref = "debugdrawer" }
debugdrawer-timber = { module = "au.com.gridstone.debugdrawer:debugdrawer-timber", version.ref = "debugdrawer" }
debugdrawer-okhttplogger = { module = "au.com.gridstone.debugdrawer:debugdrawer-okhttp-logger", version.ref = "debugdrawer" }

junit = "junit:junit:4.13.2"

kermit-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
kermit-crashlytics = { module = "co.touchlab:kermit-crashlytics", version.ref = "kermit" }

kotlinx-atomicfu = "org.jetbrains.kotlinx:atomicfu:0.20.2"
kotlinx-datetime = "org.jetbrains.kotlinx:kotlinx-datetime:0.4.0"
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-coroutines-playservices = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutines" }
kotlin-extensions = { module = "org.jetbrains.kotlin:kotlin-android-extensions", version.ref = "kotlin" }

kotlininject-compiler = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlininject" }
kotlininject-runtime = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "kotlininject" }

# This isn't strictly used, but allows Renovate to see us using the ktlint artifact
ktlint = { module = "com.pinterest:ktlint", version.ref = "ktlint" }

leakCanary = "com.squareup.leakcanary:leakcanary-android:2.11"

moko-resources = { module = "dev.icerock.moko:resources", version.ref = "moko-resources" }

okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }

playservices-blockstore = "com.google.android.gms:play-services-auth-blockstore:16.2.0"

robolectric = "org.robolectric:robolectric:4.10.3"

slack-lint-compose = "com.slack.lint.compose:compose-lint-checks:1.2.0"

swipe = "me.saket.swipe:swipe:1.1.1"

store = "org.mobilenativefoundation.store:store5:5.0.0-beta01"

sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-paging = { module = "app.cash.sqldelight:androidx-paging3-extensions", version.ref = "sqldelight" }
sqldelight-primitive = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }

timber = "com.jakewharton.timber:timber:5.0.1"

tmdb-api = "app.moviebase:tmdb-api:1.1.0-SNAPSHOT"
trakt-api = "app.moviebase:trakt-api:0.5.0-SNAPSHOT"

assertk = "com.willowtreeapps.assertk:assertk:0.26.1"

turbine = "app.cash.turbine:turbine:0.13.0"

# Build logic dependencies
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
spotless-gradlePlugin = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }

-- pulled out of Room auto migration

DROP VIEW IF EXISTS myshows_view_watch_stats;
DROP VIEW IF EXISTS followed_last_watched_airdate;
DROP VIEW IF EXISTS followed_next_to_watch;

CREATE VIEW `myshows_view_watch_stats` AS SELECT fs.id AS id, fs.show_id AS show_id, COUNT(*) AS episode_count, COUNT(ew.watched_at) AS watched_episode_count
FROM myshows_entries AS fs
INNER JOIN seasons AS s ON fs.show_id = s.show_id
INNER JOIN episodes AS eps ON eps.season_id = s.id
LEFT JOIN episode_watch_entries AS ew ON ew.episode_id = eps.id
WHERE eps.first_aired IS NOT NULL
    AND datetime(eps.first_aired) < datetime('now')
    AND s.number != 0
    AND s.ignored = 0
GROUP BY fs.id;

CREATE VIEW `followed_last_watched` AS SELECT
  fs.id,
  s.id AS season_id,
  eps.id AS episode_id,
  MAX((1000 * s.number) + eps.number) AS last_watched_abs_number
FROM myshows_entries AS fs
INNER JOIN seasons AS s ON fs.show_id = s.show_id
INNER JOIN episodes AS eps ON eps.season_id = s.id
INNER JOIN episode_watch_entries AS ew ON ew.episode_id = eps.id
WHERE
  s.number != 0
  AND s.ignored = 0
GROUP BY fs.id
ORDER BY ew.watched_at DESC;

CREATE VIEW `followed_next_to_watch` AS SELECT
  fs.show_id AS show_id,
  s.id AS season_id,
  eps.id AS episode_id,
  MIN((1000 * s.number) + eps.number) AS next_ep_to_watch_abs_number
FROM
  myshows_entries AS fs
  INNER JOIN seasons AS s ON fs.show_id = s.show_id
  INNER JOIN episodes AS eps ON eps.season_id = s.id
  LEFT JOIN episode_watch_entries AS ew ON ew.episode_id = eps.id
  LEFT JOIN followed_last_watched AS lw ON lw.id = fs.id
WHERE
  s.number != 0
  AND s.ignored = 0
  AND watched_at IS NULL
  AND datetime(first_aired) < datetime('now')
  AND ((1000 * s.number) + eps.number) > (coalesce(last_watched_abs_number, 0))
GROUP BY fs.id;

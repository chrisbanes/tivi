CREATE TABLE IF NOT EXISTS `episode_watch_entries`(
    `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    `episode_id` INTEGER NOT NULL,
    `trakt_id` INTEGER,
    `watched_at` TEXT AS kotlinx.datetime.Instant NOT NULL,
    `pending_action` TEXT AS app.tivi.data.models.PendingAction NOT NULL,
    FOREIGN KEY(`episode_id`) REFERENCES `episodes`(`id`) ON UPDATE CASCADE ON DELETE CASCADE
);

-- indices

CREATE INDEX IF NOT EXISTS `index_episode_watch_entries_episode_id` ON `episode_watch_entries` (`episode_id`);

CREATE UNIQUE INDEX IF NOT EXISTS `index_episode_watch_entries_trakt_id` ON `episode_watch_entries` (`trakt_id`);

-- queries

watchesForEpisodeId:
SELECT * FROM episode_watch_entries
WHERE episode_id = :episodeId;

watchCountForEpisodeId:
SELECT COUNT(id) FROM episode_watch_entries
WHERE episode_id = :episodeId;

entryWithId:
SELECT * FROM episode_watch_entries
WHERE id = :id;

entryWithTraktId:
SELECT * FROM episode_watch_entries
WHERE trakt_id = :traktId;

idForTraktId:
SELECT id FROM episode_watch_entries
WHERE trakt_id = :traktId;

entriesForShowIdWithPendingAction:
SELECT ew.* FROM episode_watch_entries AS ew
INNER JOIN episodes AS eps ON ew.episode_id = eps.id
INNER JOIN seasons AS s ON eps.season_id = s.id
INNER JOIN shows ON s.show_id = shows.id
WHERE shows.id = :showId AND ew.pending_action = :pendingAction;

entriesForShowId:
SELECT ew.* FROM episode_watch_entries AS ew
INNER JOIN episodes AS eps ON ew.episode_id = eps.id
INNER JOIN seasons AS s ON eps.season_id = s.id
INNER JOIN shows ON s.show_id = shows.id
WHERE shows.id = :showId;

updatePendingActionForIds:
UPDATE episode_watch_entries SET
pending_action = :pendingAction
WHERE id IN ?;

deleteWithId:
DELETE FROM episode_watch_entries WHERE id = :id;

deleteWithIds:
DELETE FROM episode_watch_entries WHERE id IN ?;

deleteWithTraktId:
DELETE FROM episode_watch_entries WHERE trakt_id = :traktId;

lastInsertRowId:
SELECT last_insert_rowid();

update:
UPDATE episode_watch_entries SET
    `episode_id` = :episode_id,
    `trakt_id` = :trakt_id,
    `watched_at` = :watched_at,
    `pending_action` = :pending_action
WHERE id = :id;

insert:
INSERT INTO episode_watch_entries (
    `id`,
    `episode_id`,
    `trakt_id`,
    `watched_at`,
    `pending_action`
) VALUES (
    nullif(:id, 0),
    :episode_id,
    :trakt_id,
    :watched_at,
    :pending_action
);

upNextShows:
SELECT shows.*, seasons.*, episodes.* FROM shows_next_to_watch
INNER JOIN shows ON shows.id = shows_next_to_watch.show_id
LEFT JOIN myshows_entries ON shows_next_to_watch.show_id = myshows_entries.show_id
LEFT JOIN shows_last_watched ON shows_last_watched.show_id = shows_next_to_watch.show_id
INNER JOIN seasons ON seasons.id = shows_next_to_watch.season_id
INNER JOIN episodes ON episodes.id = shows_next_to_watch.episode_id
LEFT JOIN episode_watch_entries ON episode_watch_entries.episode_id = shows_last_watched.episode_id
WHERE myshows_entries.id IS NOT NULL
  OR (:followedOnly = 0
      AND shows_last_watched.episode_id IS NOT NULL)
GROUP BY shows_next_to_watch.show_id
ORDER BY CASE
    WHEN :sort = 'recently_aired' THEN datetime(episodes.first_aired)
    ELSE datetime(episode_watch_entries.watched_at)
END DESC
LIMIT :limit OFFSET :offset;

upNextShowsCount:
SELECT count(*) FROM shows_next_to_watch
LEFT JOIN myshows_entries ON shows_next_to_watch.show_id = myshows_entries.show_id
WHERE :followedOnly = 0 OR myshows_entries.id IS NOT NULL;

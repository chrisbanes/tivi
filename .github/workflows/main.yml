name: CI

on: [push]

jobs:
  build-debug:
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx2048m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false -Dkotlin.compiler.execution.strategy=in-process
      TERM: dumb
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Generate cache key
        run: ./checksum.sh checksum.txt
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build debug
        run: ./gradlew bundleDebug assembleDebug --scan
      - uses: actions/upload-artifact@v1
        with:
          name: build-outputs
          path: app/build/outputs

  check:
    needs: build-debug
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx2048m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false -Dkotlin.compiler.execution.strategy=in-process
      TERM: dumb
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Generate cache key
        run: ./checksum.sh checksum.txt
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Run Spotless
        run: ./gradlew spotlessCheck --scan
      - name: Run tests
        run: ./gradlew testDebug --scan
      - name: Run Lint
        run: ./gradlew app:lintDebug dependencyUpdates --scan
      - uses: actions/upload-artifact@v1
        with:
          name: build-reports
          path: app/build/reports
      - uses: actions/upload-artifact@v1
        with:
          name: dependency-updates
          path: build/dependencyUpdates
      - name: Copy test results
        run: |
          mkdir -p junit
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit/ \;
      - uses: actions/upload-artifact@v1
        with:
          name: junit-results
          path: junit
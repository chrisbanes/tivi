name: CI

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

jobs:
  android:
    runs-on: macos-latest
    timeout-minutes: 60
    env:
      ORG_GRADLE_PROJECT_TIVI_TMDB_API_KEY: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_TMDB_API_KEY }}
      ORG_GRADLE_PROJECT_TIVI_TVDB_API_KEY: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_TVDB_API_KEY }}
      ORG_GRADLE_PROJECT_TIVI_TRAKT_CLIENT_ID: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_TRAKT_CLIENT_ID }}
      ORG_GRADLE_PROJECT_TIVI_TRAKT_CLIENT_SECRET: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_TRAKT_CLIENT_SECRET }}
      ORG_GRADLE_PROJECT_TIVI_RELEASE_KEYSTORE_PWD: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_RELEASE_KEYSTORE_PWD }}
      ORG_GRADLE_PROJECT_TIVI_RELEASE_KEY_PWD: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_RELEASE_KEY_PWD }}
      ORG_GRADLE_PROJECT_TIVI_PLAY_PUBLISHER_ACCOUNT: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_PLAY_PUBLISHER_ACCOUNT }}

    steps:
      - name: Generate build number
        shell: bash
        run: echo "ORG_GRADLE_PROJECT_TIVI_VERSIONCODE=$(( $GITHUB_RUN_NUMBER + 10000 ))" >> $GITHUB_ENV

      - uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: Decrypt secrets
        run: ./release/decrypt-secrets.sh
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}

      - name: Build Android App (skipping benchmark variant)
        run: |
          ./gradlew spotlessCheck \
            :android-app:app:bundle \
            :android-app:app:build \
            jvmTest \
            lint \
            -x :android-app:app:assembleStandardBenchmark \
            -x :android-app:app:bundleStandardBenchmark

      - name: Run smoke tests on Gradle Managed Device
        # --info used to add a repro to https://issuetracker.google.com/issues/193118030
        # config cache is disabled due to https://issuetracker.google.com/issues/262270582
        run: |
          ./gradlew api31QaDebugAndroidTest \
            -Dorg.gradle.workers.max=1 \
            -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect" \
            --info \
            --no-configuration-cache

      - name: Clean secrets
        if: always()
        run: ./release/clean-secrets.sh

      - name: Sanitize output file names (https://issuetracker.google.com/issues/263305468)
        run: |
          sanitizefilename() {
              mv "${1}" "${1//[^A-Za-z0-9._-]/_}"
          }
          export -f sanitizefilename
          find android-app/app/build/outputs -type f -exec bash -c 'sanitizefilename "$0"' {} \;

      - name: Upload build outputs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: android-build-outputs
          path: android-app/app/build/outputs

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: android-reports
          path: |
            **/build/reports/*

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: android-test-results
          path: |
            **/build/test-results/*

  ios:
    runs-on: macos-latest
    timeout-minutes: 60
    env:
      ORG_GRADLE_PROJECT_TIVI_TMDB_API_KEY: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_TMDB_API_KEY }}
      ORG_GRADLE_PROJECT_TIVI_TVDB_API_KEY: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_TVDB_API_KEY }}
      ORG_GRADLE_PROJECT_TIVI_TRAKT_CLIENT_ID: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_TRAKT_CLIENT_ID }}
      ORG_GRADLE_PROJECT_TIVI_TRAKT_CLIENT_SECRET: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_TRAKT_CLIENT_SECRET }}
      ORG_GRADLE_PROJECT_TIVI_RELEASE_KEYSTORE_PWD: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_RELEASE_KEYSTORE_PWD }}
      ORG_GRADLE_PROJECT_TIVI_RELEASE_KEY_PWD: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_RELEASE_KEY_PWD }}
      ORG_GRADLE_PROJECT_TIVI_PLAY_PUBLISHER_ACCOUNT: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_PLAY_PUBLISHER_ACCOUNT }}

    steps:
      - uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: Decrypt secrets
        run: ./release/decrypt-secrets.sh
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}

      - name: Build iOS libraries
        # This should run linkIosX64 but we're blocked by Ktor upgrading
        run: ./gradlew spotlessCheck linkDebugFrameworkIosX64 iosX64Test

      - name: Clean secrets
        if: always()
        run: ./release/clean-secrets.sh

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ios-reports
          path: |
            **/build/reports/*

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ios-test-results
          path: |
            **/build/test-results/*

  publish:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    needs: [android, ios]
    runs-on: macos-latest
    timeout-minutes: 20
    env:
      TERM: dumb

    steps:
      - uses: actions/checkout@v3

      - name: Decrypt secrets
        run: ./release/decrypt-secrets.sh
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}

      - uses: actions/download-artifact@v3
        with:
          name: android-build-outputs
          path: android-app/app/build/outputs

      - name: Create release for tags
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          generate_release_notes: true
          files: |
            android-app/app/build/outputs/apk/standard/release/app-standard-release.apk

      - name: Publish QA build to internal track
        if: github.ref == 'refs/heads/main'
        uses: r0adkll/upload-google-play@v1.1.1
        with:
          serviceAccountJson: release/play-account.json
          packageName: app.tivi
          track: internal
          releaseFiles: android-app/app/build/outputs/bundle/qaRelease/app-qa-release.aab
          mappingFile: android-app/app/build/outputs/mapping/qaRelease/mapping.txt

      - name: Publish build to alpha track
        if: github.ref == 'refs/heads/main'
        uses: r0adkll/upload-google-play@v1.1.1
        with:
          serviceAccountJson: release/play-account.json
          packageName: app.tivi
          track: alpha
          releaseFiles: android-app/app/build/outputs/bundle/standardRelease/app-standard-release.aab
          mappingFile: android-app/app/build/outputs/mapping/standardRelease/mapping.txt

      - name: Publish tagged release to beta track
        if: startsWith(github.ref, 'refs/tags/v')
        uses: r0adkll/upload-google-play@v1.1.1
        with:
          serviceAccountJson: release/play-account.json
          packageName: app.tivi
          track: beta
          releaseFiles: android-app/app/build/outputs/bundle/standardRelease/app-standard-release.aab
          mappingFile: android-app/app/build/outputs/mapping/standardRelease/mapping.txt

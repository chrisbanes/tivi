name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TERM: dumb
      ORG_GRADLE_PROJECT_TIVI_TMDB_API_KEY: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_TMDB_API_KEY }}
      ORG_GRADLE_PROJECT_TIVI_TVDB_API_KEY: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_TVDB_API_KEY }}
      ORG_GRADLE_PROJECT_TIVI_TRAKT_CLIENT_ID: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_TRAKT_CLIENT_ID }}
      ORG_GRADLE_PROJECT_TIVI_TRAKT_CLIENT_SECRET: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_TRAKT_CLIENT_SECRET }}
      ORG_GRADLE_PROJECT_TIVI_RELEASE_KEYSTORE_PWD: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_RELEASE_KEYSTORE_PWD }}
      ORG_GRADLE_PROJECT_TIVI_RELEASE_KEY_PWD: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_RELEASE_KEY_PWD }}
      ORG_GRADLE_PROJECT_TIVI_PLAY_PUBLISHER_ACCOUNT: ${{ secrets.ORG_GRADLE_PROJECT_TIVI_PLAY_PUBLISHER_ACCOUNT }}
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Decrypt secrets
        run: release/signing-setup.sh $ENCRYPT_KEY
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}

# Hello Chris, I'm opening this PR just to ask why are you using a .txt file instead of using a variable to store the hashes.. 
# I was doing some tests using your approach, and when I used a variable instead of a .txt file the time was almost cut in half just in the write step.
# Is there a reason to use a file instead of a variable? Thank you in advance =)
      - name: Generate cache key 
        run: ./checksum.sh checksum.txt

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - uses: actions/cache@v1.1.0
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v1
        with:
          token: ${{secrets.GITHUB_TOKEN}}

      - name: Build debug and check
        run: ./gradlew spotlessCheck app:assembleDebug app:lintDebug testDebug dependencyUpdates -Ptivi.versioncode=$BUILD_NUMBER --scan

      - name: Build release
        if: github.ref != 'refs/heads/master'
        run: ./gradlew bundleRelease assembleRelease -Ptivi.versioncode=$BUILD_NUMBER --scan

      - name: Publish to Play Store
        if: github.ref == 'refs/heads/master'
        run: ./gradlew publishRelease -Ptivi.versioncode=$BUILD_NUMBER --scan

      - name: Create release for tags
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          draft: true
          files: |
            app/build/outputs/apk/release/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean secrets
        if: always()
        run: release/signing-cleanup.sh

      - name: Upload build outputs
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: build-outputs
          path: app/build/outputs

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: build-reports
          path: app/build/reports

      - name: Upload dependency updates report
        uses: actions/upload-artifact@v1
        with:
          name: dependency-updates
          path: build/dependencyUpdates

      - name: Copy test results
        if: always()
        run: |
          mkdir -p junit
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit/ \;
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: junit-results
          path: junit

version: 2.0

defaults: &defaults
  docker:
    - image: circleci/android:api-27-alpha
  working_directory: ~/tivi
  environment:
    _JAVA_OPTIONS: "-Xmx1400m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2"
    TERM: dumb

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew dependencies --no-daemon
      - run:
          name: Decrypt secrets
          command: signing/setup.sh $ENCRYPT_KEY
      - run:
          name: Check and assemble APKs
          command: ./gradlew check assemble dependencyUpdates --no-daemon
      - run:
          name: Cleanup secrets
          command: signing/cleanup.sh
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - store_artifacts:
          path: app/build/outputs/apk
          destination: apks
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_artifacts:
          path: build/dependencyUpdates
          destination: dependencyUpdates
      - store_test_results:
          path: app/build/test-results
      - persist_to_workspace:
          root: .
          paths:
            - .gradle
            - build
            - app/build
  deploy_to_play:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - attach_workspace:
          at: ~/tivi
      - run:
          name: Decrypt secrets
          command: signing/setup.sh $ENCRYPT_KEY
      - run:
          name: Deploy to Alpha channel
          command: ./gradlew publishRelease --no-daemon
      - run:
          name: Cleanup secrets
          command: signing/cleanup.sh

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - deploy_to_play:
          requires:
            - build
          filters:
            branches:
              only: deploy

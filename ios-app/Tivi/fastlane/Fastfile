default_platform(:ios)

platform :ios do

  lane :certs do |options|
    app_store_connect_api_key(
      key_id: ENV['API_KEY_ID'],
      issuer_id: ENV['ISSUER_KEY_ID'],
      key_content: ENV['API_KEY_CONTENTS'],
      is_key_content_base64: true
    )

    match(
      app_identifier: ["app.tivi.client", "app.tivi.qa"],
      type: options[:type] || "development"
    )
  end

  lane :lint do
    swiftlint(
      mode: :lint,
      strict: true,
      raise_if_swiftlint_error: true
    )
  end

  private_lane :build_tivi do |options|
    setup_ci if ENV['CI']

    certs(type: 'appstore') if ENV['MATCH_PASSWORD']

    increment_build_number(
      xcodeproj: "Tivi.xcodeproj",
      build_number: ENV['TIVI_BUILD_NUMBER']
    ) if ENV['TIVI_BUILD_NUMBER']

    # If match hasn't been setup, skip all code signing and packaging
    skip_packaging = ENV['MATCH_PASSWORD'].nil?

    build_app(
      scheme: options[:scheme],
      buildlog_path: "build/fastlane-buildlog",
      skip_package_ipa: skip_packaging,
      skip_codesigning: skip_packaging
    )
  end

  lane :build_qa do
    build_tivi(scheme: "Tivi QA")
  end

  lane :build_prod do
    build_tivi(scheme: "Tivi Prod")
  end

  lane :build_all do
    build_qa
    build_prod
  end

  lane :publish_all do
    app_store_connect_api_key(
      key_id: ENV['API_KEY_ID'],
      issuer_id: ENV['ISSUER_KEY_ID'],
      key_content: ENV['API_KEY_CONTENTS'],
      is_key_content_base64: true
    )

    upload_to_testflight(app_identifier: "app.tivi.qa")
    upload_to_testflight(app_identifier: "app.tivi.client")
  end

end
